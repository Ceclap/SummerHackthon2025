#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π AI –ü–æ–º–æ—â–Ω–∏–∫–∞ –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∞
"""

import requests
import json
from datetime import datetime

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "http://localhost:8000"

def test_health():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞...")
    response = requests.get(f"{BASE_URL}/health")
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç: {data['app_name']} v{data['version']}")
        print(f"   OpenAI –¥–æ—Å—Ç—É–ø–µ–Ω: {data['openai_available']}")
        print(f"   Tesseract –¥–æ—Å—Ç—É–ø–µ–Ω: {data['tesseract_available']}")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        return False

def test_document_classifier():
    """–¢–µ—Å—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    print("\nüßæ –¢–µ—Å—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    test_documents = {
        "factura_fiscala": """
        FACTURƒÇ FISCALƒÇ
        Nr. F-001/2024
        Data: 01.01.2024
        Furnizor: SRL "Test Company"
        IDNO: 1234567890123
        Client: SRL "Client Company"
        IDNO: 9876543210987
        Suma fƒÉrƒÉ TVA: 1000.00 MDL
        TVA (20%): 200.00 MDL
        Total: 1200.00 MDL
        """,
        
        "bon_fiscal": """
        BON FISCAL
        Terminal Fiscal: TF-123456
        Data: 01.01.2024
        Ora: 14:30:25
        
        Produs 1         2 x 50.00 = 100.00
        Produs 2         1 x 25.00 = 25.00
        
        Total: 125.00 MDL
        """,
        
        "stat_plata": """
        STAT DE PLATƒÇ
        Luna: Ianuarie 2024
        
        Nume Prenume    Pozi»õia    Salariu    Taxe    Contribu»õii
        Ivanov Ivan    Contabil   5000.00   500.00   250.00
        Petrov Petru   Manager    8000.00   800.00   400.00
        
        Total: 13000.00 MDL
        """
    }
    
    for doc_type, text in test_documents.items():
        print(f"\nüìÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º: {doc_type}")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        import tempfile
        import os
        
        with tempfile.NamedTemporaryFile(mode='w', suffix='.txt', delete=False, encoding='utf-8') as f:
            f.write(text)
            temp_file_path = f.name
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
            with open(temp_file_path, 'rb') as f:
                files = {'file': ('test_doc.txt', f, 'text/plain')}
                response = requests.post(f"{BASE_URL}/documents/upload", files=files)
            
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω:")
                print(f"   –¢–∏–ø: {data['doc_type']}")
                print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {data['confidence']:.1f}%")
                print(f"   –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –ø–æ–ª—è: {len(data['fields'])}")
                
                if data['validation_errors']:
                    print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∏: {data['validation_errors']}")
                if data['validation_warnings']:
                    print(f"   ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: {data['validation_warnings']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
                
        finally:
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            os.unlink(temp_file_path)

def test_document_search():
    """–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...")
    
    # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    response = requests.get(f"{BASE_URL}/documents")
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {data['total_count']}")
        
        if data['documents']:
            print("üìã –°–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:")
            for doc in data['documents']:
                print(f"   ID: {doc['id']}, –¢–∏–ø: {doc['doc_type']}, –§–∞–π–ª: {doc['filename']}")
        else:
            print("   üì≠ –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {response.status_code}")

def test_reports():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤"""
    print("\nüìä –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤...")
    
    # –°–≤–æ–¥–Ω—ã–π –æ—Ç—á–µ—Ç
    print("üìà –°–≤–æ–¥–Ω—ã–π –æ—Ç—á–µ—Ç:")
    response = requests.get(f"{BASE_URL}/reports/summary")
    if response.status_code == 200:
        data = response.json()
        print(f"   –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {data['summary']['total_documents']}")
        print(f"   –ü–æ —Ç–∏–ø–∞–º: {data['summary']['by_type']}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    
    # –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    print("\nüìã –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç:")
    response = requests.get(f"{BASE_URL}/reports/detailed")
    if response.status_code == 200:
        data = response.json()
        print(f"   –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –æ—Ç—á–µ—Ç–µ: {data['total_count']}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")

def test_fiscal_report():
    """–¢–µ—Å—Ç –æ—Ç—á–µ—Ç–∞ –¥–ª—è FISC"""
    print("\nüèõÔ∏è –¢–µ—Å—Ç –æ—Ç—á–µ—Ç–∞ –¥–ª—è FISC...")
    
    current_month = datetime.now().month
    current_year = datetime.now().year
    
    response = requests.get(f"{BASE_URL}/reports/fiscal?month={current_month}&year={current_year}")
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ –û—Ç—á–µ—Ç FISC —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:")
        print(f"   –ü–µ—Ä–∏–æ–¥: {data['period']}")
        print(f"   –í—Å–µ–≥–æ —Ñ–∞–∫—Ç—É—Ä: {data['total_invoices']}")
        print(f"   –û–±—â–∞—è —Å—É–º–º–∞: {data['total_amount']:.2f} MDL")
        print(f"   –û–±—â–∏–π –ù–î–°: {data['total_vat']:.2f} MDL")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ FISC: {response.status_code}")

def test_export_reports():
    """–¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –æ—Ç—á–µ—Ç–æ–≤"""
    print("\nüì§ –¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –æ—Ç—á–µ—Ç–æ–≤...")
    
    # –≠–∫—Å–ø–æ—Ä—Ç —Å–≤–æ–¥–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ JSON
    print("üìÑ –≠–∫—Å–ø–æ—Ä—Ç —Å–≤–æ–¥–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ JSON:")
    response = requests.get(f"{BASE_URL}/reports/export?report_type=summary&format=json")
    if response.status_code == 200:
        print("‚úÖ –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ JSON")
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        filename = f"test_report_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
        with open(filename, 'wb') as f:
            f.write(response.content)
        print(f"   –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {filename}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: {response.status_code}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π AI –ü–æ–º–æ—â–Ω–∏–∫–∞ –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∞")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
    if not test_health():
        print("‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ.")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    test_document_classifier()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    test_document_search()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–æ–≤
    test_reports()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –¥–ª—è FISC
    test_fiscal_report()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–æ–≤
    test_export_reports()
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
    print("   - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs")
    print("   - –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8000/")
    print("   - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è: http://localhost:8000/health")

if __name__ == "__main__":
    main() 