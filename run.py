#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ AI –ü–æ–º–æ—â–Ω–∏–∫–∞ –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º–µ
"""

import uvicorn
import argparse
import sys
import os

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É 'back' –≤ sys.path, —á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞–ª–∏
    back_dir = os.path.join(os.path.dirname(__file__), 'back')
    if os.path.exists(back_dir):
        sys.path.insert(0, back_dir)
    
    from config import config

    parser = argparse.ArgumentParser(description='AI –ü–æ–º–æ—â–Ω–∏–∫ –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∞')
    parser.add_argument(
        '--host', 
        default=config.HOST, 
        help=f'–•–æ—Å—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {config.HOST})'
    )
    parser.add_argument(
        '--port', 
        type=int, 
        default=config.PORT, 
        help=f'–ü–æ—Ä—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {config.PORT})'
    )
    parser.add_argument(
        '--workers', 
        type=int, 
        default=1, 
        help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ—Ä–∫–µ—Ä–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1)'
    )
    parser.add_argument(
        '--reload', 
        action='store_true', 
        help='–ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)'
    )
    parser.add_argument(
        '--log-level', 
        default=config.LOG_LEVEL.lower(), 
        choices=['debug', 'info', 'warning', 'error'],
        help=f'–£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {config.LOG_LEVEL.lower()})'
    )
    
    args = parser.parse_args()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Tesseract —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    try:
        import pytesseract
        pytesseract.get_tesseract_version()
        print(f"‚úì Tesseract –Ω–∞–π–¥–µ–Ω: {pytesseract.get_tesseract_version()}")
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞: Tesseract –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {e}")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Tesseract OCR –∏ —è–∑—ã–∫–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã:")
        print("  macOS: brew install tesseract tesseract-lang")
        print("  Ubuntu: sudo apt install tesseract-ocr tesseract-ocr-ron tesseract-ocr-rus tesseract-ocr-eng")
        print("  Windows: –°–∫–∞—á–∞–π—Ç–µ —Å https://github.com/UB-Mannheim/tesseract/wiki")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        config.validate()
        print("‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞")
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    # config.create_directories() - –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Ç–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ validate()
    # print("‚úì –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã")
    
    print(f"üöÄ –ó–∞–ø—É—Å–∫ {config.APP_NAME} –≤–µ—Ä—Å–∏–∏ {config.VERSION}")
    print(f"üìç –ê–¥—Ä–µ—Å: http://{args.host}:{args.port}")
    print(f"üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://{args.host}:{args.port}/docs")
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è: http://{args.host}:{args.port}/health")
    
    if args.reload:
        print("üîÑ –†–µ–∂–∏–º –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –≤–∫–ª—é—á–µ–Ω (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    uvicorn.run(
        "main:app",
        host=args.host,
        port=args.port,
        workers=args.workers if not args.reload else 1,
        reload=args.reload,
        log_level=args.log_level,
        access_log=True
    )

if __name__ == "__main__":
    main() 